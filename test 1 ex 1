#include <iostream>
using namespace std;

void diagonal (int n) {
    int **a = new int *[n];

	for (int i = 0; i<n; i++)
	{
		a[i] = new int[n];
	}
	for (int i = 0; i<(n+1)/2; i++){
        for (int j = 0; j<(n+1)/2 - i ; j++){
            a[i][j+i] = (n+1)/2 - j;
            a[i][n-1-j-i] = (n+1)/2 - j;
            a[i+j][i] = (n+1)/2 - j;
            a[n-1-j-i][i] = (n+1)/2 - j;
            a[i+j][n -1-i] = (n+1)/2 - j;
            a[n-1-j-i][n - 1 - i] = (n+1)/2 - j;
            a[n-i-1][j+i] = (n+1)/2 - j;
            a[n -i -1][n - 1 - j - i] = (n+1)/2 - j;
        }
	}
	for (int i=0; i<n; i++){
        for (int j=0; j<n; j++)
            cout << a[i][j] << " ";
        cout << "\n";
	}
	for (int i = 0; i<n; i++)
	{
		delete a[i];
	}
	delete a;
}


int main(){
    int n=12
    ;
    diagonal(n);

}
