#include <iostream>
using namespace std;
struct node {
	int data;
	node* next;
};
struct dequeue {
	node* tail;
	node* head;
	void pushback(int new_data) {
		node * temp = new node;
		temp->data = new_data;
		node * paste = tail;
		if (tail != NULL) {
			tail = temp;
			paste->next = tail;
		}
		else {
			tail = temp;
			head = temp;
		}
		temp->next = NULL;
    }
	void pushforw(int new_data) {
		node * temp = new node;
		temp->data = new_data;
		node * paste = head;
		if (head != NULL) {
			head = temp;
			head->next = paste;
		}
		else {
			head = temp;
			tail = temp;
			head->next = NULL;
		}
	}
	int pop() {
		if (head == NULL) {
			return 0;
		}
		int temp_data = head->data;
		node* temp = head;
		head = head->next;
		delete[] temp;
		return temp_data;
	}
	~dequeue() {
		while (head!= NULL) {
			node* temp = head;
			head = head->next;
			delete temp;
		}
	}
};
int main() {

	dequeue t;
	t.tail = NULL;
	t.head = NULL;
	t.pushforw(20);
	t.pushback(2);
	t.pushforw(5);
	cout << t.pop() << endl;
	cout << t.pop() << endl;
	cout << t.pop() << endl;
	t.~dequeue();
	system("pause");
	return 0;
}
